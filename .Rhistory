library(tidyverse) # Includes readxl, ggplot2, dplyr, tidyr, and more
library(caret)     # For machine learning
library(randomForest) # For the random forest algorithm
library(pROC)      # For AUC and ROC curves
library(e1071)     # For SVR
library(rpart)     # For decision trees
# Load the preprocessed data
file_path <- 'Preprocessed_Data (1).xlsx'
preprocessed_data <- read_excel(file_path)
library(readxl) # Make sure this package is installed and loaded
library(readxl)
library(tidyverse) # Includes readxl, ggplot2, dplyr, tidyr, and more
library(caret)     # For machine learning
library(randomForest) # For the random forest algorithm
library(pROC)      # For AUC and ROC curves
library(e1071)     # For SVR
library(rpart)     # For decision trees
library(readxl) # Make sure this package is installed and loaded
# Now try loading the data again
preprocessed_data <- read_excel(file_path)
file_path <- '/Users/Saham/desktop/NEW_ML/Preprocessed_Data (1).xlsx'
library(tidyverse) # Includes readxl, ggplot2, dplyr, tidyr, and more
library(caret)     # For machine learning
library(randomForest) # For the random forest algorithm
library(pROC)      # For AUC and ROC curves
library(e1071)     # For SVR
library(rpart)     # For decision trees
library(readxl) # Make sure this package is installed and loaded
preprocessed_data <- read_excel(file_path)
preprocessed_data <- read_excel(file_path)
file_path <- '/Users/Saham/desktop/NEW_ML/Preprocessed_Data (1).xlsx'
library(tidyverse) # For data manipulation and visualization
library(caret)     # For machine learning
library(randomForest) # For the random forest algorithm
library(e1071)     # For support vector machines
library(rpart)     # For decision trees
library(readxl)    # For reading Excel files
# Set the file path and load the preprocessed data
file_path <- '/Users/Saham/desktop/NEW_ML/Preprocessed_Data (1).xlsx'
preprocessed_data <- read_excel(file_path)
# Separate features and target variable
features <- preprocessed_data %>% select(-c('score', 'ProbeID', 'GeneSymbol'))
target <- preprocessed_data$score
View(features)
View(preprocessed_data)
# Ensure all features are numeric for correlation analysis
numeric_features <- select_if(features, is.numeric)
correlation_matrix <- cor(numeric_features)
ggplot(as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient2()
# Feature selection using Recursive Feature Elimination (RFE)
control <- rfeControl(functions = rfFuncs, method = "cv", number = 10)
rfe_results <- rfe(numeric_features, target, sizes = c(1:5), rfeControl = control)
library(tidyverse) # For data manipulation and visualization
library(caret)     # For machine learning
library(randomForest) # For the random forest algorithm
library(e1071)     # For support vector machines
library(rpart)     # For decision trees
library(readxl)    # For reading Excel files
# Set the file path and load the preprocessed data
file_path <- '/Users/Saham/desktop/NEW_ML/Preprocessed_Data (1).xlsx'
preprocessed_data <- read_excel(file_path)
# Separate features and target variable
features <- preprocessed_data %>% select(-c('score', 'ProbeID', 'GeneSymbol'))
target <- preprocessed_data$score
# Ensure all features are numeric for correlation analysis
numeric_features <- select_if(features, is.numeric)
correlation_matrix <- cor(numeric_features)
ggplot(as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient2()
# Feature selection using Recursive Feature Elimination (RFE)
control <- rfeControl(functions = rfFuncs, method = "cv", number = 10)
rfe_results <- rfe(numeric_features, target, sizes = c(1:5), rfeControl = control)
